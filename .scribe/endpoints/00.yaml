name: Autenticación
description: |-

  Registro de nuevo usuario

  Este endpoint permite registrar un nuevo usuario en el sistema.
  Devuelve el usuario creado junto con un token de autenticación.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Autenticación
      groupDescription: |-

        Registro de nuevo usuario

        Este endpoint permite registrar un nuevo usuario en el sistema.
        Devuelve el usuario creado junto con un token de autenticación.
      subgroup: ''
      subgroupDescription: ''
      title: 'Registrar un nuevo usuario'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nombre del usuario.'
        required: true
        example: 'Juan Pérez'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Correo electrónico único.'
        required: true
        example: juan@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Mínimo 8 caracteres. Debe incluir confirmation.'
        required: true
        example: secret123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Confirmación de contraseña. Debe coincidir con `password`.'
        required: true
        example: secret123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Juan Pérez'
      email: juan@example.com
      password: secret123
      password_confirmation: secret123
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Registro exitoso",
            "data": {
              "user": {
                "id": 1,
                "name": "Juan Pérez",
                "email": "juan@example.com",
                "created_at": "2025-03-26T12:00:00.000000Z",
                "updated_at": "2025-03-26T12:00:00.000000Z"
              },
              "token": "1|aBcD123xyz..."
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "email": [
                "The email has already been taken."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Autenticación
      groupDescription: |-

        Inicio de sesión

        Este endpoint permite iniciar sesión con un usuario registrado.
        Devuelve el usuario autenticado junto con un token de acceso.
      subgroup: ''
      subgroupDescription: ''
      title: 'Iniciar sesión'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Correo electrónico del usuario.'
        required: true
        example: juan@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Contraseña del usuario.'
        required: true
        example: secret123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: juan@example.com
      password: secret123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Inicio de sesión exitoso",
            "data": {
              "user": {
                "id": 1,
                "name": "Juan Pérez",
                "email": "juan@example.com",
                "created_at": "2025-03-26T12:00:00.000000Z",
                "updated_at": "2025-03-26T12:00:00.000000Z"
              },
              "token": "1|aBcD123xyz..."
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "email": [
                "Las credenciales son incorrectas."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Autenticación
      groupDescription: |-

        Obtener usuario autenticado

        Este endpoint devuelve la información del usuario autenticado mediante el token de acceso.
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener usuario autenticado'
      description: 'Requiere autenticación con token Bearer.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {Escribe aquí tu token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Usuario encontrado",
            "data": {
              "id": 1,
              "name": "Juan Pérez",
              "email": "juan@example.com",
              "created_at": "2025-03-26T12:00:00.000000Z",
              "updated_at": "2025-03-26T12:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|MamQIVVD8SLC0gYvjPXd5oBATwfXQL1eDTDeuPBW438393b6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Autenticación
      groupDescription: |-

        Cerrar sesión

        Este endpoint revoca todos los tokens del usuario autenticado, cerrando su sesión en todos los dispositivos.
      subgroup: ''
      subgroupDescription: ''
      title: 'Cerrar sesión'
      description: 'Requiere autenticación con token Bearer.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {Escribe aquí tu token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Sesión cerrada",
            "data": []
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|MamQIVVD8SLC0gYvjPXd5oBATwfXQL1eDTDeuPBW438393b6'
    controller: null
    method: null
    route: null
    custom: []
